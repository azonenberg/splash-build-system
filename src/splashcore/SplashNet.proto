syntax = "proto3";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Individual message packet types

//Identify the server to clients
message ServerHello
{
	uint32	magic		= 1;	//magic number, always 0x444c4942 ("BILD")
	uint32	version		= 2;	//protocol version supported by server (always 1 for now)	
};

//Identify the client to the server
message ClientHello
{
	uint32	magic		= 1;	//magic number, always 0x444c4942 ("BILD")
	uint32	version		= 2;	//protocol version supported by server (always 1 for now)	
	
	enum ClientType
	{
		CLIENT_DEVELOPER = 0;
		CLIENT_BUILD = 1;
	};
	uint32	type		= 3;	//type of client
	
	string	hostname	= 4;	//hostname for debug messages
};

//Report basic information about a developer client
message DevInfo
{
	string	arch 		= 1;	//client architecture triplet
};

//Report that a file changed clientside
message FileChanged
{
	string	fname		= 1;	//path of changed file
	string	hash		= 2;	//ASCII hex SHA-256 sum of the changed file
};

//Report that a file was deleted clientside
message FileRemoved
{
	string	fname		= 1;	//path of changed file
};

//Tell a client whether a given file is in the cache or not
message FileAck
{
	bool	fileCached	= 1;	//true if in cache, false if we have to send content
};

//Send contents of a file to the server
message FileData
{
	bytes	fileData	= 1;	//the contents of the file
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Top-level message type

message SplashMsg
{
	oneof Payload
	{
		ServerHello serverHello = 1;
		ClientHello clientHello = 2;
		DevInfo		devInfo		= 3;
		FileChanged fileChanged	= 4;
		FileRemoved fileRemoved = 5;
		FileAck		fileAck		= 6;
		FileData	fileData	= 7;
	}
};
